@startuml

'Se busca diseñar una biblioteca digital de libros electrónicos online que facilite a escritores la publicación 
'de sus obras para que los lectores puedan acceder a ellos en línea.

class DigitalLibrary{}

'La plataforma contará con dos tipos de usuarios: escritores y lectores. Cada usuario tendrá un identificador 
'interno único, su nombre completo, un nombre de usuario, una contraseña para autenticación, y una o más tarjetas 
'de crédito (con número, un código de verificación de 3 cifras, y fecha de caducidad) en las que realizar los ingresos 
'y cargos según corresponda.

abstract class User{
    - id: int
    - name: String
    - userName: String
    - password: String
} 

User <|-- Reader
User <|-- Writer
User *-- "1..*" CreditCard : creditCard >

class CreditCard{
    - number: int
    - code: int
    - expiringDate: Date
}

' Para poder operar en la plataforma, esta deberá permitir dar de alta a los diferentes tipos de usuario, y que estos 
' puedan validar sus credenciales con nombre de usuario y clave.

abstract class User{
    - id: int
    - name: String
    - userName: String
    - password: String

    + getUserName(): String
    + getPassword(): String
}

'class DigitalLibrary{
'    + registerReader(reader: Reader): Boolean
'    + registerWriter(writer: Writer): Boolean
'    + login(userName: String, password: String): Reader
'    + login(userName: String, password: String): Writer
'}

DigitalLibrary *-- "*" User : users >

'Los escritores proporcionarán un número de identificación fiscal, un porcentaje de comisión por cada descarga de 
'sus libros por parte de los lectores, y un nombre comercial o pseudónimo literario.

class Writer{
    - fiscalId: int
    - commissionPerDownload: double
    - pseudonym: String
}

'Para registrarse, un escritor debe tener al menos un libro que publicar. La plataforma podrá acceder a los libros 
'de cualquier escritor registrado en cualquier momento.

class DigitalLibrary{
    + registerReader(reader: Reader): Boolean
    + registerWriter(writer: Writer, books: List<Book>): Boolean
    + login(userName: String, password: String): Reader
    + login(userName: String, password: String): Writer
}

DigitalLibrary *-- Book

'Por su parte, los lectores tendrán un plan de precios asociado. Los planes pueden ser: Básico (sin tarifa mensual, 
'se paga sólo por los libros adquiridos), Estándar (tarifa mensual de 9.99€, con un descuento del 50% en todas las compras), 
'o Premium (tarifa mensual de 19.99€, con acceso a todo el contenido sin coste adicional).

abstract class PurchasePlan{
    - type: String
    - monthlyFee: double
    - discountPercent: double

    + getMonthlyFee(): double
    + getDiscountPercent(): double
}

class BasicPurchasePlan{
    + getMonthlyFee(): double
    + getDiscountPercent(): double
}

class StandardPurchasePlan{
    + getMonthlyFee(): double
    + getDiscountPercent(): double
}

class PremiumPurchasePlan{
    + getMonthlyFee(): double
    + getDiscountPercent(): double
}

Reader --> PurchasePlan : purchasePlan >
PurchasePlan <|-- BasicPurchasePlan
PurchasePlan <|-- StandardPurchasePlan
PurchasePlan <|-- PremiumPurchasePlan

'La plataforma deberá tener acceso al registro de los libros comprados por los lectores, y calcular el importe mensual a 
'pagar por cada uno de estos, atendiendo al plan de precios al que se encuentra abonado. El cálculo del importe mensual debe 
'contemplar todos los libros comprados por el lector ese mes, más la cuota mensual de subscripción según su plan, más los 
'actos promocionales a los que se ha apuntado (como se detalla más abajo).



@enduml